The basic examples are very simple examples

Usage
-----
All examples have a few scripts that runs them

clean.sh : Cleans the output generated by running the other scripts
run_cver.sh : Runs the example through cver (Requires cver to findable on the path)
run_iverilog.sh : Runs the example through iverilog (Requires iverilog to be findable on the path)
run_vcd_assert.sh : TODO

Basic examples
--------------

These examples are very simple, but cover different ways to specify the sdf
file. All the basic tests (except the jtl and splitter) have both one that has
no timing violations and one that has a timing violation.

DRO: Specified in verilog with direct instance name
AND: Specified on commandline with direct instance name (No Verilog files)
Splitter and JTL: No SDF timing checks
NDRO: Specified in verilog with "*" instance
XOR: Specified on the commandline with "*" instance

Bigger examples
---------------

For more elaborate examples we include a 1-bit full adder, an 8-bit ripple carry adder 
(ripple_carry_8bit) and a 2-to-4-bit-, one-hot-, dual-to-single-rail-, AND-based decoder (decode2dr4sr). 

All of these use SDF files to annotate their assertions with mixed use of the "*", named and unnamed 
cell instances. 

Furthermore, the decoder shows normal file specification on command line, whereas the 1-bit and 
8-bit adder examples use the vcd_assert library file flag (-i) to include its dependencies. 

Large/Very-Large Examples:
-------------------------
TODO


Notes
------
We use compiler directives to disable the sdf annotation command in the basic NDRO example, because 
it doesn't run in IVerilog due to a bug in IVerilog not being able parse SDF files which make use of 
the '*' wildcard to specify cell instances.

